# Generated by Django 5.0.7 on 2024-07-16 00:11

import django.db.models.deletion
import pages.custom_blocks
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("pages", "0084_customizablepage"),
        ("pages", "0085_customizablepage_page_layout"),
        ("pages", "0086_rootpage_flexiblepage_delete_customizablepage"),
        ("pages", "0087_alter_rootpage_body"),
        ("pages", "0088_alter_rootpage_body"),
        ("pages", "0089_alter_rootpage_body"),
        ("pages", "0090_rename_page_layout_rootpage_layout_and_more"),
        ("pages", "0091_alter_rootpage_body"),
        ("pages", "0092_rename_flexiblepage_flexpage_alter_rootpage_body"),
        ("pages", "0093_alter_rootpage_body"),
        ("pages", "0094_alter_rootpage_body"),
        ("pages", "0095_alter_rootpage_body"),
        ("pages", "0096_alter_rootpage_body"),
        ("pages", "0097_alter_rootpage_body"),
        ("pages", "0098_alter_rootpage_body"),
        ("pages", "0099_alter_rootpage_body"),
        ("pages", "0100_alter_rootpage_body"),
        ("pages", "0101_alter_rootpage_body"),
        ("pages", "0102_alter_rootpage_body"),
        ("pages", "0103_alter_rootpage_body"),
        ("pages", "0104_alter_rootpage_body"),
        ("pages", "0105_alter_rootpage_body"),
        ("pages", "0106_alter_rootpage_body"),
        ("pages", "0107_alter_rootpage_body"),
        ("pages", "0108_alter_rootpage_body"),
        ("pages", "0109_alter_rootpage_body"),
        ("pages", "0110_alter_rootpage_body"),
    ]

    dependencies = [
        ("pages", "0083_alter_k12mainpage_testimonials"),
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="RootPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "hero",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("text", pages.custom_blocks.APIRichTextBlock()),
                                        ("image", pages.custom_blocks.APIImageChooserBlock(required=False)),
                                        (
                                            "cta",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        ("text", wagtail.blocks.CharBlock(required=False)),
                                                        ("aria_label", wagtail.blocks.CharBlock(required=False)),
                                                        (
                                                            "target",
                                                            wagtail.blocks.StreamBlock(
                                                                [
                                                                    (
                                                                        "external",
                                                                        wagtail.blocks.URLBlock(required=False),
                                                                    ),
                                                                    (
                                                                        "internal",
                                                                        wagtail.blocks.PageChooserBlock(required=False),
                                                                    ),
                                                                    (
                                                                        "document",
                                                                        wagtail.documents.blocks.DocumentChooserBlock(
                                                                            required=False
                                                                        ),
                                                                    ),
                                                                ],
                                                                required=False,
                                                            ),
                                                        ),
                                                    ],
                                                    required=False,
                                                ),
                                                label="Calls to Action",
                                                max_num=2,
                                            ),
                                        ),
                                        (
                                            "config",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "image_alignment",
                                                        wagtail.blocks.ChoiceBlock(
                                                            choices=[
                                                                ("left", "Left"),
                                                                ("right", "Right"),
                                                                ("topLeft", "Top Left"),
                                                                ("topRight", "Top Right"),
                                                                ("bottomLeft", "Bottom Left"),
                                                                ("bottomRight", "Bottom Right"),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "image_size",
                                                        wagtail.blocks.ChoiceBlock(
                                                            choices=[
                                                                ("auto", "Auto"),
                                                                ("contain", "Contain"),
                                                                ("cover", "Cover"),
                                                            ]
                                                        ),
                                                    ),
                                                ],
                                                max_num=2,
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "section",
                                wagtail.blocks.StreamBlock(
                                    [
                                        (
                                            "cards",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        ("text", pages.custom_blocks.APIRichTextBlock()),
                                                        (
                                                            "cta",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    ("text", wagtail.blocks.CharBlock(required=False)),
                                                                    (
                                                                        "aria_label",
                                                                        wagtail.blocks.CharBlock(required=False),
                                                                    ),
                                                                    (
                                                                        "target",
                                                                        wagtail.blocks.StreamBlock(
                                                                            [
                                                                                (
                                                                                    "external",
                                                                                    wagtail.blocks.URLBlock(
                                                                                        required=False
                                                                                    ),
                                                                                ),
                                                                                (
                                                                                    "internal",
                                                                                    wagtail.blocks.PageChooserBlock(
                                                                                        required=False
                                                                                    ),
                                                                                ),
                                                                                (
                                                                                    "document",
                                                                                    wagtail.documents.blocks.DocumentChooserBlock(
                                                                                        required=False
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                            required=False,
                                                                        ),
                                                                    ),
                                                                ],
                                                                required=False,
                                                            ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                        ),
                                        (
                                            "config",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "corner_style",
                                                        wagtail.blocks.ChoiceBlock(
                                                            choices=[("rounded", "Rounded"), ("square", "Square")]
                                                        ),
                                                    )
                                                ],
                                                max_num=1,
                                            ),
                                        ),
                                        ("text", pages.custom_blocks.APIRichTextBlock()),
                                        ("html", wagtail.blocks.RawHTMLBlock()),
                                    ]
                                ),
                            ),
                            ("html", wagtail.blocks.RawHTMLBlock()),
                        ],
                        use_json_field=True,
                    ),
                ),
                (
                    "promote_image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="FlexPage",
            fields=[
                (
                    "rootpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pages.rootpage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("pages.rootpage",),
        ),
    ]
